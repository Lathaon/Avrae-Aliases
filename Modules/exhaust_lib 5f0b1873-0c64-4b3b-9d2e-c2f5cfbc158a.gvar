# exhaust_lib = "5f0b1873-0c64-4b3b-9d2e-c2f5cfbc158a"

_pc = character()

def get_exhaustion():
    if _pc.cc_exists("Exhaustion"):
        return _pc.set_cc("Exhaustion", _pc.get_cc("Exhaustion"))
    return 0

def set_exhaustion(value):
    if value > 0:
        _pc.set_cvar_nx("hunger", 0)
        _pc.set_cvar_nx("thirst", 0)
        return _pc.create_cc("Exhaustion",
            minVal = "max(0, int(hunger) - 3 - constitutionMod) + int(thirst)",
            maxVal = 6,
            reset = "long",
            reset_by = "-1",
            desc = (
                "1. Disadvantage on ability checks\n"
                "2. Speed halved\n"
                "3. Disadvantage on attacks and saves\n"
                "4. Hit point maximum halved\n"
                "5. Speed reduced to 0\n"
                "6. Death"
            ),
            initial_value = value
        ).value
    else:
        _pc.delete_cc("Exhaustion")
        return 0

def modify_exhaustion(delta):
    return set_exhaustion(get_exhaustion() + delta)

def apply_effect(combatant = combat().me, exhaustion = get_exhaustion()):
    combatant.remove_effect("Exhaustion")
    if exhaustion:
        passive_effects = {}
        desc_strs = []
        if exhaustion >= 6:
            desc_strs.append("Dead")
            passive_effects["max_hp_bonus"] = -combatant.max_hp
        else:
            passive_effects["check_dis"] = {"all"}
            if exhaustion >= 3:
                passive_effects["attack_advantage"] = -1
                passive_effects["save_dis"] = {"all"}
            if exhaustion >= 4:
                passive_effects["max_hp_bonus"] = -ceil(combatant.max_hp / 2)
            if exhaustion >= 5:
                desc_strs.append("Speed reduced to 0")
            elif exhaustion >= 2:
                desc_strs.append("Speed halved")
        combatant.add_effect("Exhaustion", passive_effects = passive_effects, desc = "\n- ".join(desc_strs))
        combatant.modify_hp(0, overflow = False)
